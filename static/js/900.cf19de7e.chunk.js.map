{"version":3,"file":"static/js/900.cf19de7e.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts;\n\nexport const selectValue = state => state.filters.text;\n\nexport const selectLoading = state => state.contacts.isLoading;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  padding-top: 10px;\n  color: white;\n  font-weight: 500;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  margin-right: 5px;\n`;\n\nexport const Input = styled.input`\n  margin-right: 10px;\n  padding-left: 5px;\n  width: 150px;\n  height: 30px;\n  background-color: #e09ffc;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  box-sizing: border-box;\n  border-radius: 4px;\n  outline: none;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  outline: none;\n  border: 0px;\n  color: white;\n  :focus,\n  :hover {\n    color: purple;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { BsPersonPlus } from 'react-icons/bs';\n\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const nameId = nanoid(3);\n  const numberId = nanoid(3);\n  const { contacts } = useSelector(selectContacts);\n  const [name, setNameForm] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChangeName = e => {\n    setNameForm(e.target.value);\n  };\n\n  const handleChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    console.log(contacts);\n    e.preventDefault();\n    if (contacts) {\n      if (\n        contacts.find(\n          contact => contact.name.toLowerCase() === name.toLowerCase()\n        )\n      ) {\n        return alert(`${name} is already in contacts.`);\n      }\n      dispatch(addContact({ name, number }));\n      console.log({ name, number });\n      reset();\n    }\n\n    return;\n  };\n\n  const reset = () => {\n    setNameForm('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label htmlFor={nameId}>Name</Label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          id={nameId}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChangeName}\n        />\n        <Label htmlFor={numberId}>Number</Label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          id={numberId}\n          placeholder=\"Number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChangeNumber}\n        />\n        <Button type=\"submit\">\n          <BsPersonPlus size={33} />\n        </Button>\n      </Form>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 20px;\n  color: white;\n  font-weight: 500;\n`;\n\nexport const Title = styled.span`\n  margin-right: 15px;\n`;\n\nexport const Input = styled.input`\n  padding-left: 5px;\n  width: 150px;\n  height: 30px;\n  background-color: #e09ffc;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  box-sizing: border-box;\n  border-radius: 4px;\n  outline: none;\n`;\n","import React from 'react';\nimport { setTextFilter } from 'redux/contacts/slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Label, Input, Title } from './Filter.styled';\nimport { selectValue } from 'redux/contacts/selectors';\n\n// import { Button } from './FeedbackOptions.styled';\n\nexport const Filter = () => {\n  const value = useSelector(selectValue);\n\n  const dispatch = useDispatch();\n  const filretContacts = e => {\n    dispatch(setTextFilter(e.currentTarget.value));\n  };\n\n  const filterId = nanoid(3);\n  return (\n    <Label htmlFor={filterId}>\n      <Title>Find contacts by name</Title>\n      <Input\n        type=\"text\"\n        placeholder=\"Input name\"\n        value={value}\n        onChange={filretContacts}\n        id={filterId}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  font-size: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n  color: white;\n  :focus,\n  :hover {\n    color: purple;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 50px;\n  height: 30px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  outline: none;\n  :focus,\n  :hover {\n    box-shadow: 2px 8px 11px -2px rgba(0, 0, 0, 0.75);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 500px;\n`;\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n`;\n\nexport const TelNumber = styled.a`\n  color: white;\n  :focus,\n  :hover {\n    color: purple;\n  }\n`;\n\nexport const Email = styled.a`\n  color: white;\n  :focus,\n  :hover {\n    color: purple;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  outline: none;\n  border: 0px;\n  color: white;\n  :focus,\n  :hover {\n    color: purple;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BsTelephone, BsXCircle } from 'react-icons/bs';\nimport { IoPeopleCircleOutline } from 'react-icons/io5';\n\nimport {\n  Item,\n  ContactWrapper,\n  ButtonWrapper,\n  TelNumber,\n  Button,\n} from './Contact.styled';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  const telNumber = 'tel:' + number;\n\n  return (\n    <Item>\n      <ContactWrapper>\n        <IoPeopleCircleOutline size={50} />\n        <div>\n          {name}: <p>{number}</p>\n        </div>\n      </ContactWrapper>\n\n      <ButtonWrapper>\n        <TelNumber href={telNumber}>\n          <BsTelephone size={33} />\n        </TelNumber>\n\n        <Button type=\"button\" onClick={handleDelete}>\n          <BsXCircle size={33} />\n        </Button>\n      </ButtonWrapper>\n    </Item>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { List, Item } from './ContactList.styled';\nimport { Contact } from 'components/Contact/Contact';\nimport { selectContacts, selectValue } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const filter = useSelector(selectValue);\n  const { contacts, isLoading, error } = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const normalized = filter.toLocaleLowerCase();\n  const contactsFilter = contacts?.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalized)\n  );\n\n  const contactsState = contactsFilter.sort((firstContact, secondContact) =>\n    firstContact.name.localeCompare(secondContact.name)\n  );\n\n  return (\n    <List>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      {contacts &&\n        contactsState.map(({ id, name, number }) => (\n          <Item key={id}>\n            <Contact id={id} name={name} number={number} />\n          </Item>\n        ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nimport { Title, TitleContacts } from '../components/App/App.styled';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <TitleContacts>Contacts</TitleContacts>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectValue","filters","text","selectLoading","isLoading","Form","styled","Label","Input","Button","ContactForm","nameId","nanoid","numberId","useSelector","useState","name","setNameForm","number","setNumber","dispatch","useDispatch","reset","onSubmit","e","console","log","preventDefault","find","contact","toLowerCase","alert","addContact","autoComplete","htmlFor","type","value","id","placeholder","pattern","title","required","onChange","target","size","Title","Filter","filterId","setTextFilter","currentTarget","List","Item","ContactWrapper","ButtonWrapper","TelNumber","Contact","telNumber","href","onClick","deleteContact","ContactList","filter","error","useEffect","fetchContacts","normalized","toLocaleLowerCase","contactsState","includes","sort","firstContact","secondContact","localeCompare","Loader","map","Contacts"],"sourceRoot":""}